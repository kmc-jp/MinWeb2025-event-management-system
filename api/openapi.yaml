openapi: 3.0.3
info:
  title: イベント管理システム API
  description: イベント管理システムのRESTful API - DDD/CQRSアーキテクチャに基づく実装
  version: 1.0.0
  contact:
    name: 開発チーム
    email: dev@example.com

servers:
  - url: http://localhost:8080
    description: 開発環境

paths:
  /health:
    get:
      summary: ヘルスチェック
      operationId: healthCheck
      responses:
        "200":
          description: サービス正常
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"

  /api/events:
    get:
      summary: イベント一覧を取得
      operationId: listEvents
      parameters:
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: 1ページあたりの件数
          required: false
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: status
          in: query
          description: イベントステータスでフィルタ
          required: false
          schema:
            type: string
            enum: [DRAFT, SCHEDULE_POLLING, CONFIRMED, FINISHED, CANCELLED]
        - name: tags
          in: query
          description: タグでフィルタ（カンマ区切り）
          required: false
          schema:
            type: string
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEventList"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: 新しいイベントを作成
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventRequest"
      responses:
        "201":
          description: イベント作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEventResponse"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/events/{id}/participants:
    get:
      summary: イベント参加者一覧を取得
      operationId: listEventParticipants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventParticipant"
        "404":
          description: イベントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: イベントに参加
      operationId: joinEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JoinEventRequest"
      responses:
        "201":
          description: 参加成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventParticipant"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: イベントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: 既に参加済み
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/events/{id}/participants/{userId}:
    delete:
      summary: イベントから退出
      operationId: leaveEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 退出成功
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: イベントまたは参加者が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/events/{id}:
    get:
      summary: イベント詳細を取得
      operationId: getEventDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetails"
        "404":
          description: イベントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: イベントを更新
      operationId: updateEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventRequest"
      responses:
        "200":
          description: イベント更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetails"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 権限不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: イベントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: イベントを削除
      operationId: deleteEvent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: イベント削除成功
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 権限不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: イベントが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/users/me:
    get:
      summary: 現在のユーザー情報を取得
      operationId: getCurrentUser
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/users:
    get:
      summary: ユーザー一覧を取得
      operationId: listUsers
      parameters:
        - name: role
          in: query
          required: false
          schema:
            type: string
          description: 特定の役割を持つユーザーのみを取得
        - name: generation
          in: query
          required: false
          schema:
            type: string
          description: 特定の世代のユーザーのみを取得
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserSummary"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/users/{id}:
    get:
      summary: ユーザー情報を取得
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/roles:
    get:
      summary: 利用可能な役割一覧を取得
      operationId: listRoles
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: 新しい役割を作成
      operationId: createRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleRequest"
      responses:
        "201":
          description: 役割作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: 役割が既に存在します
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/tags:
    get:
      summary: タグ一覧を取得
      operationId: listTags
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      summary: 新しいタグを作成
      operationId: createTag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagRequest"
      responses:
        "201":
          description: タグ作成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: タグが既に存在します
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/roles/{role_name}:
    get:
      summary: 役割詳細を取得
      operationId: getRoleDetails
      parameters:
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDetails"
        "404":
          description: 役割が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: 役割を更新
      operationId: updateRole
      parameters:
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoleRequest"
      responses:
        "200":
          description: 役割更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 権限不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 役割が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: 役割を削除
      operationId: deleteRole
      parameters:
        - name: role_name
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: 役割削除成功
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 権限不足
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 役割が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/users/{user_id}/roles:
    post:
      summary: ユーザーに役割を付与
      operationId: assignRoleToUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignRoleRequest"
      responses:
        "200":
          description: 役割付与成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: ユーザーまたは役割が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: ユーザーから役割を削除
      operationId: removeRoleFromUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
        - name: role_name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 役割削除成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 認証エラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: ユーザーまたは役割が見つかりません
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    # イベント関連
    EventSummary:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          description: イベントID
        title:
          type: string
          description: イベントタイトル
        status:
          type: string
          enum: [DRAFT, SCHEDULE_POLLING, CONFIRMED, FINISHED, CANCELLED]
          description: イベントステータス
        venue:
          type: string
          description: 会場
        organizer_name:
          type: string
          description: 主催者名
        allowed_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 参加可能な役割
        confirmed_date:
          type: string
          format: date-time
          description: 確定した日程
        schedule_deadline:
          type: string
          format: date-time
          description: 日程確定予定日
        created_at:
          type: string
          format: date-time
          description: 作成日時
      required:
        - event_id
        - title
        - status
        - organizer_name
        - created_at

    EventDetails:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          description: イベントID
        title:
          type: string
          description: イベントタイトル
        description:
          type: string
          description: イベントの説明
        status:
          type: string
          enum: [DRAFT, SCHEDULE_POLLING, CONFIRMED, FINISHED, CANCELLED]
          description: イベントステータス
        venue:
          type: string
          description: 会場
        allowed_participation_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 参加可能な役割
        allowed_edit_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 編集可能な役割
        tags:
          type: array
          items:
            type: string
          description: タグ
        fee_settings:
          type: array
          items:
            $ref: "#/components/schemas/FeeSetting"
          description: 料金設定
        confirmed_date:
          type: string
          format: date-time
          description: 確定した日程
        schedule_deadline:
          type: string
          format: date-time
          description: 日程確定予定日
        organizer_name:
          type: string
          description: 主催者名
        created_at:
          type: string
          format: date-time
          description: 作成日時
        updated_at:
          type: string
          format: date-time
          description: 更新日時
      required:
        - event_id
        - title
        - status
        - organizer_name
        - created_at
        - updated_at

    PaginatedEventList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/EventSummary"
        total_count:
          type: integer
          description: 総件数
        page:
          type: integer
          description: 現在のページ番号
        page_size:
          type: integer
          description: 1ページあたりの件数
      required:
        - data
        - total_count
        - page
        - page_size

    CreateEventRequest:
      type: object
      properties:
        title:
          type: string
          description: イベントタイトル
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: イベントの説明
          maxLength: 1000
        venue:
          type: string
          description: 会場
          maxLength: 200
        allowed_participation_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 参加可能な役割
        allowed_edit_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 編集可能な役割
        tags:
          type: array
          items:
            type: string
          description: タグ
        fee_settings:
          type: array
          items:
            $ref: "#/components/schemas/FeeSetting"
          description: 料金設定
        poll_type:
          type: string
          description: 日程調整タイプ
          default: "date_select"
        poll_candidates:
          type: array
          items:
            type: string
            format: date-time
          description: 日程候補（ISO 8601形式）
        confirmed_date:
          type: string
          format: date-time
          description: 確定した日程
        schedule_deadline:
          type: string
          format: date-time
          description: 日程確定予定日

      required:
        - title
        - allowed_participation_roles
        - allowed_edit_roles

    CreateEventResponse:
      type: object
      properties:
        event_id:
          type: string
          format: uuid
          description: 作成されたイベントのID
      required:
        - event_id

    UpdateEventRequest:
      type: object
      properties:
        title:
          type: string
          description: イベントタイトル
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: イベントの説明
          maxLength: 1000
        venue:
          type: string
          description: 会場
          maxLength: 200
        allowed_participation_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 参加可能な役割
        allowed_edit_roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: 編集可能な役割
        tags:
          type: array
          items:
            type: string
          description: タグ
        fee_settings:
          type: array
          items:
            $ref: "#/components/schemas/FeeSetting"
          description: 料金設定
      required:
        - title
        - allowed_participation_roles
        - allowed_edit_roles

    # ユーザー関連
    User:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          description: ユーザーの役割リスト
        generation:
          type: integer
          minimum: 1
          maximum: 100
          description: 世代（1-100の範囲）
      required:
        - user_id
        - name
        - roles
        - generation

    UserRole:
      type: string
      description: ユーザーの役割

    Role:
      type: object
      properties:
        name:
          type: string
          description: 役割名
        description:
          type: string
          description: 役割の説明
        created_at:
          type: string
          format: date-time
          description: 作成日時
        created_by:
          type: string
          description: 作成者ID
      required:
        - name
        - description
        - created_at
        - created_by

    CreateRoleRequest:
      type: object
      properties:
        name:
          type: string
          description: 役割名
          minLength: 1
          maxLength: 50
        description:
          type: string
          description: 役割の説明
          maxLength: 200
      required:
        - name
        - description

    AssignRoleRequest:
      type: object
      properties:
        role_name:
          type: string
          description: 付与する役割名
      required:
        - role_name

    UpdateRoleRequest:
      type: object
      properties:
        description:
          type: string
          description: 役割の説明
          maxLength: 200
      required:
        - description

    RoleDetails:
      type: object
      properties:
        name:
          type: string
          description: 役割名
        description:
          type: string
          description: 役割の説明
        created_at:
          type: string
          format: date-time
          description: 作成日時
        created_by:
          type: string
          description: 作成者ID
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserSummary"
          description: この役割を持つユーザー一覧
      required:
        - name
        - description
        - created_at
        - created_by
        - users

    UserSummary:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        generation:
          type: integer
          minimum: 1
          maximum: 100
          description: 世代（1-100の範囲）
      required:
        - user_id
        - name
        - generation

    Tag:
      type: object
      properties:
        name:
          type: string
          description: タグ名
        created_at:
          type: string
          format: date-time
          description: 作成日時
        created_by:
          type: string
          description: 作成者ID
      required:
        - name
        - created_at
        - created_by

    CreateTagRequest:
      type: object
      properties:
        name:
          type: string
          description: タグ名
          maxLength: 50
      required:
        - name

    # イベント参加関連
    EventParticipant:
      type: object
      properties:
        user_id:
          type: string
          description: ユーザーID
        name:
          type: string
          description: ユーザー名
        generation:
          type: integer
          minimum: 1
          maximum: 100
          description: 世代（1-100の範囲）
        joined_at:
          type: string
          format: date-time
          description: 参加日時
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED]
          description: 参加ステータス
      required:
        - user_id
        - name
        - generation
        - joined_at
        - status

    JoinEventRequest:
      type: object
      properties:
        user_id:
          type: string
          description: 参加するユーザーID
      required:
        - user_id

    # 料金設定
    FeeSetting:
      type: object
      properties:
        applicable_generation:
          type: integer
          minimum: 1
          maximum: 100
          description: "適用世代（1-100の範囲）"
        fee:
          $ref: "#/components/schemas/Money"
      required:
        - applicable_generation
        - fee

    Money:
      type: object
      properties:
        amount:
          type: integer
          description: 金額（最小単位）
          minimum: 0
        currency:
          type: string
          description: 通貨コード
          default: "JPY"
      required:
        - amount
        - currency

    # 共通
    HealthCheck:
      type: object
      properties:
        status:
          type: string
          enum: [ok, error]
          description: サービス状態
      required:
        - status

    Error:
      type: object
      properties:
        error:
          type: string
          description: エラーメッセージ
      required:
        - error
