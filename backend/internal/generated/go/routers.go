/*
 * イベント管理システム API
 *
 * イベント管理システムのRESTful API - DDD/CQRSアーキテクチャに基づく実装
 *
 * API version: 1.0.0
 * Contact: dev@example.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package generated

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"AssignRoleToUser",
		http.MethodPost,
		"/api/users/:user_id/roles",
		AssignRoleToUser,
	},

	{
		"ConfirmEventSchedule",
		http.MethodPost,
		"/api/events/:id/confirm-schedule",
		ConfirmEventSchedule,
	},

	{
		"CreateEvent",
		http.MethodPost,
		"/api/events",
		CreateEvent,
	},

	{
		"CreateRole",
		http.MethodPost,
		"/api/roles",
		CreateRole,
	},

	{
		"CreateTag",
		http.MethodPost,
		"/api/tags",
		CreateTag,
	},

	{
		"DeleteEvent",
		http.MethodDelete,
		"/api/events/:id",
		DeleteEvent,
	},

	{
		"DeleteRole",
		http.MethodDelete,
		"/api/roles/:role_name",
		DeleteRole,
	},

	{
		"GetCurrentUser",
		http.MethodGet,
		"/api/users/me",
		GetCurrentUser,
	},

	{
		"GetEventDetails",
		http.MethodGet,
		"/api/events/:id",
		GetEventDetails,
	},

	{
		"GetRoleDetails",
		http.MethodGet,
		"/api/roles/:role_name",
		GetRoleDetails,
	},

	{
		"GetUser",
		http.MethodGet,
		"/api/users/:id",
		GetUser,
	},

	{
		"HealthCheck",
		http.MethodGet,
		"/health",
		HealthCheck,
	},

	{
		"JoinEvent",
		http.MethodPost,
		"/api/events/:id/participants",
		JoinEvent,
	},

	{
		"LeaveEvent",
		http.MethodDelete,
		"/api/events/:id/participants/:userId",
		LeaveEvent,
	},

	{
		"ListEventParticipants",
		http.MethodGet,
		"/api/events/:id/participants",
		ListEventParticipants,
	},

	{
		"ListEvents",
		http.MethodGet,
		"/api/events",
		ListEvents,
	},

	{
		"ListRoles",
		http.MethodGet,
		"/api/roles",
		ListRoles,
	},

	{
		"ListTags",
		http.MethodGet,
		"/api/tags",
		ListTags,
	},

	{
		"ListUsers",
		http.MethodGet,
		"/api/users",
		ListUsers,
	},

	{
		"RemoveRoleFromUser",
		http.MethodDelete,
		"/api/users/:user_id/roles",
		RemoveRoleFromUser,
	},

	{
		"UpdateEvent",
		http.MethodPut,
		"/api/events/:id",
		UpdateEvent,
	},

	{
		"UpdateRole",
		http.MethodPut,
		"/api/roles/:role_name",
		UpdateRole,
	},
}
